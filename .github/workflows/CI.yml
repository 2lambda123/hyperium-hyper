name: CI
on:
  pull_request:
  push:
    branches:
      - master

env:
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test ${{ matrix.rust }} on ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
          # - 1.39.0

        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest

        include:
          - rust: stable
            features: "--no-default-features --features runtime,stream,__internal_happy_eyeballs_tests"
          - rust: beta
            features: "--no-default-features --features runtime,stream,__internal_happy_eyeballs_tests"
          - rust: nightly
            features: "--no-default-features --features runtime,stream,nightly"
            benches: true
          # - rust: 1.39.0
          #   features: "--no-default-features --features runtime"
          #   build-only: true

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Build only
        if: matrix.build-only
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ${{ matrix.features }}

      - name: Test
        if: matrix.build-only != true
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.features }}

      - name: Test all benches
        if: matrix.benches && matrix.build-only != true
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --benches ${{ matrix.features }}
